definitions:
  models.AddBrand:
    properties:
      name:
        type: string
    required:
    - name
    type: object
  models.AddCategory:
    properties:
      name:
        type: string
    required:
    - name
    type: object
  models.AddCoupon:
    properties:
      coupon_id:
        type: string
      discount:
        type: integer
      expiry:
        type: string
      maximum_amount:
        type: number
      minimum_purchase:
        type: number
      usage:
        type: integer
    type: object
  models.AddProduct:
    properties:
      brand_id:
        type: integer
      category_id:
        type: integer
      description:
        type: string
      discount:
        type: number
      image:
        type: string
      name:
        type: string
      price:
        type: number
      quantity:
        type: integer
    required:
    - brand_id
    - category_id
    - description
    - discount
    - image
    - name
    - price
    - quantity
    type: object
  models.AdminLogin:
    properties:
      email:
        type: string
      password:
        type: string
    required:
    - email
    - password
    type: object
  models.AdminSignUp:
    properties:
      email:
        type: string
      name:
        type: string
      password:
        type: string
      phno:
        type: string
    required:
    - email
    - name
    - password
    - phno
    type: object
  models.Forgot:
    properties:
      email:
        type: string
    required:
    - email
    type: object
  models.ForgotVerify:
    properties:
      code:
        type: string
      email:
        type: string
    required:
    - code
    - email
    type: object
  models.OTPData:
    properties:
      phoneNumber:
        type: string
    required:
    - phoneNumber
    type: object
  models.OrderRequest:
    properties:
      address_id:
        type: integer
      coupon_id:
        type: string
      payment_id:
        type: integer
    required:
    - address_id
    - coupon_id
    - payment_id
    type: object
  models.ProductSearch:
    properties:
      word:
        type: string
    required:
    - word
    type: object
  models.ProductUpdate:
    properties:
      quantity:
        type: integer
    type: object
  models.Reset:
    properties:
      new_password:
        type: string
    required:
    - new_password
    type: object
  models.ShowAddress:
    properties:
      city:
        type: string
      house_name:
        type: string
      landmark:
        type: string
      name:
        type: string
      pincode:
        type: integer
      state:
        type: string
    required:
    - city
    - house_name
    - landmark
    - name
    - pincode
    - state
    type: object
  models.UpdateBrand:
    properties:
      name:
        type: string
    required:
    - name
    type: object
  models.UpdateCategory:
    properties:
      name:
        type: string
    required:
    - name
    type: object
  models.UserLogin:
    properties:
      email:
        type: string
      password:
        type: string
    required:
    - email
    - password
    type: object
  models.UserSignUp:
    properties:
      email:
        type: string
      name:
        type: string
      password:
        type: string
      phno:
        type: string
    required:
    - email
    - name
    - password
    - phno
    type: object
  models.UserUpdate:
    properties:
      email:
        type: string
      name:
        type: string
      phno:
        type: string
    required:
    - email
    - name
    - phno
    type: object
  models.VerifyData:
    properties:
      code:
        type: string
      phoneNumber:
        type: string
    required:
    - code
    - phoneNumber
    type: object
  response.Response:
    properties:
      data: {}
      error: {}
      message:
        type: string
      statuscode:
        type: integer
    type: object
info:
  contact: {}
paths:
  /address:
    get:
      consumes:
      - application/json
      description: Show Addresses of the user
      parameters:
      - description: page
        in: query
        name: page
        required: true
        type: string
      - description: count
        in: query
        name: count
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - ApiKeyHeaderAuth: []
      summary: Show Address
      tags:
      - User Profile
    post:
      consumes:
      - application/json
      description: Add Address of the user
      parameters:
      - description: address
        in: body
        name: address
        required: true
        schema:
          $ref: '#/definitions/models.ShowAddress'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - ApiKeyHeaderAuth: []
      summary: Add Address
      tags:
      - User Profile
  /address/{id}:
    patch:
      consumes:
      - application/json
      description: Update Address of the user
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: string
      - description: address
        in: body
        name: address
        required: true
        schema:
          $ref: '#/definitions/models.ShowAddress'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - ApiKeyHeaderAuth: []
      summary: Update Address
      tags:
      - User Profile
  /admin:
    get:
      consumes:
      - application/json
      description: Show Details Of Admin
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - ApiKeyHeaderAuth: []
      summary: Admin Home
      tags:
      - User Management
  /admin/brand:
    post:
      consumes:
      - application/json
      description: Add Brand By Admin
      parameters:
      - description: brand details
        in: body
        name: brand
        required: true
        schema:
          $ref: '#/definitions/models.AddBrand'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - ApiKeyHeaderAuth: []
      summary: Add Brand
      tags:
      - Brand Management
  /admin/brand/{id}:
    delete:
      consumes:
      - application/json
      description: Delete Brand By Admin
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - ApiKeyHeaderAuth: []
      summary: Delete Brand
      tags:
      - Brand Management
    patch:
      consumes:
      - application/json
      description: Update brand By Admin
      parameters:
      - description: update brand
        in: body
        name: updateBrand
        required: true
        schema:
          $ref: '#/definitions/models.UpdateBrand'
      - description: id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - ApiKeyHeaderAuth: []
      summary: Update brand
      tags:
      - Brand Management
  /admin/category:
    post:
      consumes:
      - application/json
      description: Add Category By Admin
      parameters:
      - description: category details
        in: body
        name: category
        required: true
        schema:
          $ref: '#/definitions/models.AddCategory'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - ApiKeyHeaderAuth: []
      summary: Add Category
      tags:
      - Category Management
  /admin/category/{id}:
    delete:
      consumes:
      - application/json
      description: Delete Category By Admin
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - ApiKeyHeaderAuth: []
      summary: Delete Category
      tags:
      - Category Management
    patch:
      consumes:
      - application/json
      description: Update categry By Admin
      parameters:
      - description: update category
        in: body
        name: updateCategory
        required: true
        schema:
          $ref: '#/definitions/models.UpdateCategory'
      - description: id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - ApiKeyHeaderAuth: []
      summary: Update category
      tags:
      - Category Management
  /admin/coupon:
    get:
      consumes:
      - application/json
      description: Show Coupons To Admin
      parameters:
      - description: page
        in: query
        name: page
        required: true
        type: string
      - description: count
        in: query
        name: count
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - ApiKeyHeaderAuth: []
      summary: Show Coupons
      tags:
      - Coupon Management
    post:
      consumes:
      - application/json
      description: Add coupon
      parameters:
      - description: coupon details
        in: body
        name: coupon
        required: true
        schema:
          $ref: '#/definitions/models.AddCoupon'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - ApiKeyHeaderAuth: []
      summary: Add coupon
      tags:
      - Coupon Management
  /admin/coupon/block/{id}:
    patch:
      consumes:
      - application/json
      description: Block Coupon By Admin
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - ApiKeyHeaderAuth: []
      summary: Block Coupon
      tags:
      - Coupon Management
  /admin/coupon/expire/{id}:
    patch:
      consumes:
      - application/json
      description: Expire Coupon By Admin
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - ApiKeyHeaderAuth: []
      summary: Expire Coupon
      tags:
      - Coupon Management
  /admin/coupon/unblock/{id}:
    patch:
      consumes:
      - application/json
      description: Unblock Coupon By Admin
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - ApiKeyHeaderAuth: []
      summary: Unblock Coupon
      tags:
      - Coupon Management
  /admin/dashboard:
    get:
      consumes:
      - application/json
      description: Dashboard Of Admin
      produces:
      - application/json
      responses:
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - ApiKeyHeaderAuth: []
      summary: Admin Dashboard
      tags:
      - Dashboard
  /admin/login:
    post:
      consumes:
      - application/json
      description: Login handler for admin
      parameters:
      - description: Admin login details
        in: body
        name: admin
        required: true
        schema:
          $ref: '#/definitions/models.AdminLogin'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Response'
      summary: Admin Login
      tags:
      - Admin Authentication
  /admin/orders:
    get:
      consumes:
      - application/json
      description: Show All Orders To Admin
      parameters:
      - description: page
        in: query
        name: page
        required: true
        type: string
      - description: count
        in: query
        name: count
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - ApiKeyHeaderAuth: []
      summary: Show All Orders To Admin
      tags:
      - Order Management
  /admin/orders/{id}:
    get:
      consumes:
      - application/json
      description: Search Order By Admin
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - ApiKeyHeaderAuth: []
      summary: Search Order By Admin
      tags:
      - Order Management
  /admin/orders/approval/{id}:
    patch:
      consumes:
      - application/json
      description: Approve Order By Admin
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - ApiKeyHeaderAuth: []
      summary: Approve Order
      tags:
      - Order Management
  /admin/orders/filterbyapproval:
    get:
      consumes:
      - application/json
      description: Filter Order By Approval
      parameters:
      - description: page
        in: query
        name: page
        required: true
        type: string
      - description: count
        in: query
        name: count
        required: true
        type: string
      - description: keyword
        in: query
        name: keyword
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - ApiKeyHeaderAuth: []
      summary: Filter Order By Approval
      tags:
      - Order Management
  /admin/orders/filterbypaymentstatus:
    get:
      consumes:
      - application/json
      description: Filter Order By Approval
      parameters:
      - description: page
        in: query
        name: page
        required: true
        type: string
      - description: count
        in: query
        name: count
        required: true
        type: string
      - description: keyword
        in: query
        name: keyword
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - ApiKeyHeaderAuth: []
      summary: Filter Order By Approval
      tags:
      - Order Management
  /admin/product:
    get:
      consumes:
      - application/json
      description: Get Product To Admin
      parameters:
      - description: update brand
        in: body
        name: updateBrand
        required: true
        schema:
          $ref: '#/definitions/models.UpdateBrand'
      - description: page
        in: query
        name: page
        required: true
        type: string
      - description: count
        in: query
        name: count
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - ApiKeyHeaderAuth: []
      summary: Get Product
      tags:
      - Product Management
    post:
      consumes:
      - application/json
      description: Add Product By Admin
      parameters:
      - description: product details
        in: body
        name: product
        required: true
        schema:
          $ref: '#/definitions/models.AddProduct'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - ApiKeyHeaderAuth: []
      summary: Add Product
      tags:
      - Product Management
  /admin/product/{id}:
    delete:
      consumes:
      - application/json
      description: Delete Product By Admin
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - ApiKeyHeaderAuth: []
      summary: Delete Product
      tags:
      - Product Management
    patch:
      consumes:
      - application/json
      description: Update Product By Admin
      parameters:
      - description: update details
        in: body
        name: product
        required: true
        schema:
          $ref: '#/definitions/models.ProductUpdate'
      - description: id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - ApiKeyHeaderAuth: []
      summary: Update Product
      tags:
      - Product Management
  /admin/salesReport:
    get:
      consumes:
      - application/json
      description: Sales Report
      parameters:
      - description: keyword
        in: query
        name: keyword
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - ApiKeyHeaderAuth: []
      summary: Sales Report
      tags:
      - Sales Report
  /admin/signup:
    post:
      consumes:
      - application/json
      description: SignUp handler for admin
      parameters:
      - description: Admin signup details
        in: body
        name: admin
        required: true
        schema:
          $ref: '#/definitions/models.AdminSignUp'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Response'
      summary: Admin SignUp
      tags:
      - Admin Authentication
  /admin/user:
    get:
      consumes:
      - application/json
      description: List Users To Admin
      parameters:
      - description: page
        in: query
        name: page
        required: true
        type: string
      - description: count
        in: query
        name: count
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - ApiKeyHeaderAuth: []
      summary: List Users
      tags:
      - User Management
  /admin/user/block/{id}:
    patch:
      consumes:
      - application/json
      description: Block User By Admin
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - ApiKeyHeaderAuth: []
      summary: Block User
      tags:
      - User Management
  /admin/user/unblock/{id}:
    patch:
      consumes:
      - application/json
      description: Unblock User By Admin
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - ApiKeyHeaderAuth: []
      summary: Unblock User
      tags:
      - User Management
  /brand:
    get:
      consumes:
      - application/json
      description: Show All brands To User
      parameters:
      - description: page
        in: query
        name: page
        required: true
        type: string
      - description: count
        in: query
        name: count
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Response'
      summary: Show All brands
      tags:
      - Filter
  /cart:
    delete:
      consumes:
      - application/json
      description: empty Products In Users Cart
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - ApiKeyHeaderAuth: []
      summary: empty Cart Products
      tags:
      - Cart Management
    get:
      consumes:
      - application/json
      description: Show Products In Users Cart
      parameters:
      - description: page
        in: query
        name: page
        required: true
        type: string
      - description: count
        in: query
        name: count
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - ApiKeyHeaderAuth: []
      summary: Show Cart Products
      tags:
      - Cart Management
  /cart/{id}:
    post:
      consumes:
      - application/json
      description: Add Products To Cart
      parameters:
      - description: product_id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - ApiKeyHeaderAuth: []
      summary: Add To Cart
      tags:
      - Cart Management
  /cart/remove/{id}:
    delete:
      consumes:
      - application/json
      description: Remove Product From Cart
      parameters:
      - description: product_id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - ApiKeyHeaderAuth: []
      summary: Remove From Cart
      tags:
      - Cart Management
  /category:
    get:
      consumes:
      - application/json
      description: Show All categories To User
      parameters:
      - description: page
        in: query
        name: page
        required: true
        type: string
      - description: count
        in: query
        name: count
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Response'
      summary: Show All categories
      tags:
      - Filter
  /checkout:
    get:
      consumes:
      - application/json
      description: Displaying Checkout Page Before Placing Order
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - ApiKeyHeaderAuth: []
      summary: CheckOut
      tags:
      - Checkout Page
  /forgotPassword:
    post:
      consumes:
      - application/json
      description: forgot password for user to reset password by sending otp to phone
        number
      parameters:
      - description: forgot
        in: body
        name: forgot
        required: true
        schema:
          $ref: '#/definitions/models.Forgot'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Response'
      summary: forgot password
      tags:
      - User Profile
  /forgotPassword/reset:
    post:
      consumes:
      - application/json
      description: To Reset Password
      parameters:
      - description: reset
        in: body
        name: reset
        required: true
        schema:
          $ref: '#/definitions/models.Reset'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - ApiKeyHeaderAuth: []
      summary: Reset Password
      tags:
      - User Profile
  /forgotPassword/verify:
    post:
      consumes:
      - application/json
      description: Verify otp to reset password
      parameters:
      - description: verify
        in: body
        name: verify
        required: true
        schema:
          $ref: '#/definitions/models.ForgotVerify'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Response'
      summary: Verify Reset Otp
      tags:
      - User Profile
  /login:
    post:
      consumes:
      - application/json
      description: Login handler for user
      parameters:
      - description: user login details
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/models.UserLogin'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Response'
      summary: User Login
      tags:
      - User Authentication
  /orders:
    get:
      consumes:
      - application/json
      description: Showing Order History To User
      parameters:
      - description: page
        in: query
        name: page
        required: true
        type: string
      - description: count
        in: query
        name: count
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - ApiKeyHeaderAuth: []
      summary: Order History
      tags:
      - Order
    post:
      consumes:
      - application/json
      description: Place order
      parameters:
      - description: orderRequest
        in: body
        name: OrderRequest
        required: true
        schema:
          $ref: '#/definitions/models.OrderRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - ApiKeyHeaderAuth: []
      summary: Place Order
      tags:
      - Order
  /orders/cancel/{id}:
    patch:
      consumes:
      - application/json
      description: Cancel Order By User
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - ApiKeyHeaderAuth: []
      summary: Cancel Order
      tags:
      - Order
  /orders/return/{id}:
    patch:
      consumes:
      - application/json
      description: Return Order
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - ApiKeyHeaderAuth: []
      summary: Return Order
      tags:
      - Order
  /products:
    get:
      consumes:
      - application/json
      description: Show All Product To User
      parameters:
      - description: page
        in: query
        name: page
        required: true
        type: string
      - description: count
        in: query
        name: count
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Response'
      summary: Show All
      tags:
      - Product View
  /products/{id}:
    get:
      consumes:
      - application/json
      description: Show Product To User
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Response'
      summary: Show Product
      tags:
      - Product View
  /products/brand/{id}:
    get:
      consumes:
      - application/json
      description: Filter Products By Brand
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: string
      - description: page
        in: query
        name: page
        required: true
        type: string
      - description: count
        in: query
        name: count
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Response'
      summary: Filter Products By Brand
      tags:
      - Filter
  /products/category/{id}:
    get:
      consumes:
      - application/json
      description: Filter Products By category
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: string
      - description: page
        in: query
        name: page
        required: true
        type: string
      - description: count
        in: query
        name: count
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Response'
      summary: Filter Products By category
      tags:
      - Filter
  /products/search:
    get:
      consumes:
      - application/json
      description: Show Products By A Word In The Name Of The Product
      parameters:
      - description: search word
        in: body
        name: word
        required: true
        schema:
          $ref: '#/definitions/models.ProductSearch'
      - description: page
        in: query
        name: page
        required: true
        type: string
      - description: count
        in: query
        name: count
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Response'
      summary: Show Products By name
      tags:
      - Product View
  /sendOtp:
    post:
      consumes:
      - application/json
      description: Sending Otp To User
      parameters:
      - description: otp
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/models.OTPData'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Response'
      summary: Send Otp
      tags:
      - User Authentication
  /signup:
    post:
      consumes:
      - application/json
      description: SignUp handler for user
      parameters:
      - description: user signup details
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/models.UserSignUp'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Response'
      summary: User SignUp
      tags:
      - User Authentication
  /userProfile:
    get:
      consumes:
      - application/json
      description: View Details Of The User
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - ApiKeyHeaderAuth: []
      summary: View Details
      tags:
      - User Profile
    patch:
      consumes:
      - application/json
      description: Update Details of the user
      parameters:
      - description: userdetails
        in: body
        name: userdetails
        required: true
        schema:
          $ref: '#/definitions/models.UserUpdate'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - ApiKeyHeaderAuth: []
      summary: Update User Details
      tags:
      - User Profile
  /verifyOtp:
    post:
      consumes:
      - application/json
      description: Verify Otp From User
      parameters:
      - description: verify
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/models.VerifyData'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Response'
      summary: Verify Otp
      tags:
      - User Authentication
  /wallet:
    get:
      consumes:
      - application/json
      description: Wallet Of The User
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - ApiKeyHeaderAuth: []
      summary: Wallet Of The User
      tags:
      - User Profile
swagger: "2.0"
